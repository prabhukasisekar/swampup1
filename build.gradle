plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'maven-publish'
    id 'com.github.spotbugs' version '4.0.2'
    id 'com.gorylenko.gradle-git-properties' version '1.5.1'
    id 'org.sonarqube' version '3.0'
}

group = 'io.releaseiq'
version = '0.0.2-SNAPSHOT'

apply plugin:'java'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()

    // This repo is used for downloading riqdb.jar for staging env
    maven {
        name "riq-snapshot"
        url "s3://riq-artifactory/snapshot"
        authentication {
            awsIm(AwsImAuthentication)
        }
    }
    // This repo is used for downloading riqdb.jar for production env
    maven {
        name "riq-release"
        url "s3://riq-artifactory/release"
        authentication {
            awsIm(AwsImAuthentication)
        }
    }

    // This repo is used for downloading the spotbugs plugin
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    jcenter()
}

dependencies {
    implementation 'io.releaseiq:riqdb:1.6-SNAPSHOT'
    implementation 'io.releaseiq:riq-crypto:0.0.4-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.3.2'
    implementation 'javax.servlet:jstl'
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'com.amazonaws:aws-java-sdk-cognitoidp:1.11.871'
    implementation 'software.amazon.awssdk:s3:2.16.31'
    implementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    implementation 'com.auth0:java-jwt:3.10.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'

    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.5.Final'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'

    implementation 'software.amazon.awssdk:sqs:2.10.56'
    // AWS SQS SDK depends on jersey libraries and thus we end up including starter-jersey
    implementation 'org.springframework.boot:spring-boot-starter-jersey'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'

    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.7'

    implementation group: 'com.cronutils',name: 'cron-utils', version:'9.1.1'

    testCompile 'org.junit.platform:junit-platform-launcher'
    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.6.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok:1.18.8')

    runtimeOnly 'mysql:mysql-connector-java'
    compile group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot', version: '3.0.3'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    // Spotbugs and Spotbugs Plugin dependencies
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    spotbugs 'com.github.spotbugs:spotbugs:4.0.0'
}

apply plugin: "com.gorylenko.gradle-git-properties"

task cleanUpTestLogs(type: Delete) {
    delete project.file("logs")
}
clean.dependsOn cleanUpTestLogs

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

apply plugin: 'checkstyle'
checkstyle {
    toolVersion "7.6.1"
    // Checkstyle plugin requires checkstyle files to be under config/checkstyle directory
    configFile file("config/checkstyle/checkstyle.xml")
    // For the time being, the issues found are ignored, and the build continues
    ignoreFailures true
    // The style violations found shown on the console
    showViolations false
}
checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}

spotbugs {
    // For the time being, the issues found are ignored, and the build continues
    ignoreFailures = true
    showProgress = false
    // Configuring the spotbugs to use quite a bit of memory to spot the bugs
    effort = 'max'
}

bootRun {
    args = []
    jvmArgs = []
}
